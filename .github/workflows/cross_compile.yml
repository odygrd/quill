name: Cross-Compile Build

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'scripts/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'scripts/**'

jobs:
  cross-compile:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, arm64, armel, armhf, i386, loong64, ppc64el, riscv64, s390x ]
        include:
          - arch: amd64
            triplet: x86_64-linux-gnu
          - arch: arm64
            triplet: aarch64-linux-gnu
          - arch: armel
            triplet: arm-linux-gnueabi
          - arch: armhf
            triplet: arm-linux-gnueabihf
          - arch: i386
            triplet: i686-linux-gnu
          - arch: loong64
            triplet: loongarch64-linux-gnu
          - arch: ppc64el
            triplet: powerpc64le-linux-gnu
          - arch: riscv64
            triplet: riscv64-linux-gnu
          - arch: s390x
            triplet: s390x-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - name: Install cross-compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-${{ matrix.triplet }}

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        env:
          CXX: ${{ matrix.triplet }}-g++
        run: |
          cmake $GITHUB_WORKSPACE \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=17 \
            -DQUILL_BUILD_TESTS=OFF \
            -DQUILL_BUILD_EXAMPLES=ON \
            -DQUILL_VERBOSE_MAKEFILE=ON

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: |
          threads=$(nproc)
          cmake --build . --config Release --parallel $threads
